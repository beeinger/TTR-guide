service: backend
configValidationMode: warn
provider:
  name: aws
  runtime: rust
  memorySize: 128
  timeout: 20
  stage: ${opt:stage, 'dev'}
  region: eu-west-2
  environment:
    JOB_POSTS_TABLE_NAME:
      Ref: JobPostsTable
    STATISTICS_TABLE_NAME:
      Ref: StatisticsTable
    JOB_POSTS_QUEUE_URL:
      Ref: JobPostsQueue
    GENERATE_STATISTICS_QUEUE_URL:
      Ref: GenerateStatisticsQueue
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:DescribeTable
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:BatchWriteItem
            - dynamodb:BatchGetItem
          Resource:
            - "Fn::GetAtt": [JobPostsTable, Arn]
            - "Fn::GetAtt": [StatisticsTable, Arn]
        - Effect: Allow
          Action:
            - sqs:SendMessage
            - sqs:SendMessageBatch
            - sqs:DeleteMessage
            - sqs:DeleteMessageBatch
          Resource:
            - "Fn::GetAtt": [JobPostsQueue, Arn]
            - "Fn::GetAtt": [GenerateStatisticsQueue, Arn]

package:
  individually: true

plugins:
  - serverless-rust
  - serverless-dotenv-plugin
  - serverless-domain-manager

functions:
  #? --- CRONs ---
  data_collector:
    handler: api.data-collector
    events:
      - schedule: rate(70 minutes)
    timeout: 900
  #? --- API endpoints ---
  statistics:
    handler: api.get-statistics
    events:
      - http:
          path: statistics
          method: get
          cors: true
  hello:
    handler: api.hello-world
    events:
      - http:
          path: hello
          method: get
          cors: true
  json_try:
    handler: api.json-try
    events:
      - http:
          path: json
          method: post
          cors: true
  #? --- Queues ---
  process_job_post:
    handler: api.process-job-post
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - JobPostsQueue
              - Arn
    timeout: 120
  generate_statistics:
    handler: api.generate-statistics
    memorySize: 256
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - GenerateStatisticsQueue
              - Arn
    timeout: 900
  #? --- Helper lambdas ---
  process_all_job_posts:
    handler: api.process-all-job-posts
    timeout: 120
  migrate_db:
    handler: api.migrate-db
    timeout: 120

resources:
  Resources:
    JobPostsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "${opt:stage}-job-posts"
        AttributeDefinitions:
          - AttributeName: jobId
            AttributeType: N
        KeySchema:
          - AttributeName: jobId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    StatisticsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: "${opt:stage}-statistics"
        AttributeDefinitions:
          - AttributeName: statId
            AttributeType: S
        KeySchema:
          - AttributeName: statId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    JobPostsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: "${opt:stage}-job-posts-queue.fifo"
        VisibilityTimeout: 240
        FifoQueue: true
    GenerateStatisticsQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: "${opt:stage}-generate-statistics-queue.fifo"
        VisibilityTimeout: 1200
        FifoQueue: true

custom:
  rust:
    dockerless: true
  customDomain:
    domainName: api.ttr.guide
    basePath: ""
    stage: ${self:provider.stage}
    createRoute53Record: true
    certificateArn: arn:aws:acm:us-east-1:097371206778:certificate/e2424adc-5750-4625-9363-ae98df5c6fae
